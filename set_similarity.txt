Map of word -> containing documents
15 -> 1
20 -> 2,3,4 (n^2 over [2,3,4])

Your previous Plain Text content is preserved below:

The similarity of 2 documents (each with distinct words) is defined to be the size of the intersection divided by the size of the union. For example, if the documents consist of integers, the similarity of {1, 5, 3} and {1, 7, 2, 3} is 0.4 because the intersection has size 2 and the union has size 5.

We have a long list of documents (with distinct values and each with an associated ID) where the similarity is believed to be "sparse." That is, any two arbitrarily selected documents are very likely to have similarity 0 because the words in documents are expected to be unique. 

Design an algorithm that returns a list of pairs of documents IDs and the associated similarity. Print only the pairs with simlarity greater than 0. 

Don't bother with empty documents

As an example, suppose we have the following documents:

    13: {14, 15, 100, 9, 3}
    16: {32, 1, 9, 3, 5}
    19: {15, 29, 2, 6, 8, 7}
    24: {7, 10}

Then we expect the output to be:

    ID1, ID2, SIM
    13, 19, 0.1
    13, 16, 0.25
    19, 24, 0.1428....
